{"version":3,"sources":["images/footer-screenshot.png","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/send/send.js","components/form.js","images/sapporo-ar-experience.png","Pages/prize.js"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","httpResponse","instance","Constructor","TypeError","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","Form","props","history","useHistory","className","onSubmit","e","preventDefault","fetch","method","mode","body","firstName","value","lastName","addressOne","city","postalCode","province","email","phone","then","resp","json","respr","console","log","parseInt","templateParams","to_name","reply_to","message","emailJS","result","error","setTimeout","push","type","name","id","placeholder","Prize","src","ARExperience","width","alt","onClick","FooterScreenshot"],"mappings":"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","file":"static/js/9.f5801c84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/footer-screenshot.030b9b11.png\";","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import React, {useEffect} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport emailJS from 'emailjs-com';\nimport './components.css'\n\nconst Form = (props) => {\n  let history = useHistory();\n\nconst sumbitInfo = (e) =>{\n  e.preventDefault()\n\n  fetch(\"https://bottlecapdev.pythonanywhere.com/shipping-data\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    body: JSON.stringify({\n    'fullname': `${e.target.firstName.value} ${e.target.lastName.value}`,\n    'address': `${e.target.addressOne.value}`,\n    'city': `${e.target.city.value}`,\n    'postal_code': `${e.target.postalCode.value}`,\n    'province': `${e.target.province.value}`,\n    'email': `${e.target.email.value}`,\n    'phone': `${e.target.phone.value}`\n\n    })\n  }).then((resp) => resp.json())\n  .then((respr) =>{\n    console.log(respr)\n    const status = respr.status\n    if(parseInt(status) == 200){\n      console.log(status)\n      var templateParams = {\n        to_name: `${e.target.firstName.value}`,\n        reply_to: `${e.target.email.value}`,\n        message: `Thank you for choosing Sapporo Brewery. Your order is being process. It can take up to 6 weeks to receive your prize.`\n    \n      }\n      // Send Email\n      emailJS.send('service_thetfwl', 'template_i9rdhf9', templateParams, 'user_AQ88jMvNSoWJpgS9wommO')\n      .then((result) =>{ \n        console.log(result.text)\n      }, (error) => {\n          console.log(error.text)\n      })\n      \n      setTimeout(()=>{\n        history.push('/ThanksForEntry')\n      }, 1000)\n  \n    }\n  })\n\n\n\n}\n\n\n  return(\n    <form className='form_container' onSubmit={sumbitInfo}> \n      <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"FIRST NAME\" />\n      <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"LAST NAME\" />\n      <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"EMAIL\" />\n      <input type=\"tel\" name=\"phone\" id=\"phone\" placeholder=\"PHONE\"/>\n      <input type=\"text\" name=\"addressOne\" id=\"addressOne\" placeholder=\"ADDRESS\" />\n      <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"CITY\"/>\n      <input type=\"text\" name=\"province\" id=\"province\" placeholder=\"PROVINCE\"/>\n      <input type=\"text\" name=\"postalCode\" id=\"postalCode\" placeholder=\"POSTAL CODE\"/>\n      {/* <p>voluptate ut reprehendrit.</p> */}\n      <button type='submit' id=\"submit\">SUBMIT</button>\n    </form>\n   )\n\n }\n\nexport default Form","export default __webpack_public_path__ + \"static/media/sapporo-ar-experience.997f1253.png\";","import React from \"react\";\nimport \"./Pages.css\";\nimport Form from '../components/form'\nimport ARExperience from '../images/sapporo-ar-experience.png'\nimport FooterScreenshot from '../images/footer-screenshot.png'\nimport { useHistory } from \"react-router-dom\";\n\nconst Prize = (props) => {\n  let history = useHistory();\n  return (\n      <div className=\"prize_container\">\n            <img src={ARExperience} width=\"150\" alt=\"\" />\n            <h3>LET US KNOW WHERE WE CAN SEND YOUR PRIZE</h3>\n            <Form />\n            <button id=\"submit\" onClick={() => {history.push(\"/thanksforplaying\")}}>SUBMIT</button>\n      {/* <button id=\"terms-conditions\">Terms & Conditions</button> */}\n            <div id=\"footerScreenshot_container\">\n              <img src={FooterScreenshot} width=\"100%\" alt=\"\" />\n            </div>\n      </div>\n  );\n};\n\nexport default Prize;"],"sourceRoot":""}